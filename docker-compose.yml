services:
  web:
    build: .
    container_name: ecommerce_web
    entrypoint: ["./entrypoint.sh"]
    command: gunicorn ecommerce_platform.wsgi:application --bind 0.0.0.0:8000 --access-logfile -
    volumes:
      - .:/app
      - ./staticfiles:/app/staticfiles
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: always
    environment:
      DJANGO_SETTINGS_MODULE: "ecommerce_platform.settings"  # Explicit environment variable
      PYTHONUNBUFFERED: "1"  # Ensure logs are flushed immediately

  db:
    image: postgres:14
    container_name: ecommerce_db
    restart: always
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB: "${POSTGRES_DB}"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:alpine
    container_name: ecommerce_redis
    ports:
      - "6379:6379"
    restart: always
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  redis_data:
